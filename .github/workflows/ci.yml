name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Check code formatting
      run: npm run format:check
    
    - name: Build project
      run: npm run build
    
    - name: Test CLI (dry run)
      run: npm run test:dry
    
    - name: Test CLI (verbose)
      run: npm run test:manual
    
    - name: Verify generated files
      run: |
        # Check that files were generated correctly
        ls -la examples/
        cat examples/slice.ts | head -20
        cat examples/types.ts | head -10
    
    - name: Clean up test files
      run: rm -rf examples/slice.ts examples/reducers.ts examples/types.ts state.ts
    
    - name: Test with different file structures
      run: |
        # Test with nested directory structure
        mkdir -p test-redux/user
        cp examples/initState.ts test-redux/user/
        node dist/index.js generate ./test-redux/user/initState.ts --dry-run
        rm -rf test-redux/

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level=high
    
    - name: Check for vulnerabilities
      run: npm audit --audit-level=moderate 